import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import Header from "../../components/header/header";
import "./ListPage.css";
import ListCard from "../../components/ListCard/ListCard";

// –¢–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è
interface Item {
  id: number;
  name: string;
  description: string;
  location: string;
  type: string;
  image?: string; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ñ–æ—Ç–æ
}

// –í–∞—Ä–∏–∞–Ω—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const categories = ["–í—Å–µ", "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", "–ê–≤—Ç–æ", "–£—Å–ª—É–≥–∏"];

const ListPage: React.FC = () => {
  const [items, setItems] = useState<Item[]>([]);
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("–í—Å–µ");

  // –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    fetch("http://localhost:3000/items")
      .then((res) => res.json())
      .then((data) => {
        console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data); // üîπ –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        setItems(data);
      })
      .catch((err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err));
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π
  const filteredItems = items.filter((item) => {
    return (
      (selectedCategory === "–í—Å–µ" || item.type === selectedCategory) &&
      item.name.toLowerCase().includes(searchQuery.toLowerCase())
    );
  });

  return (
    <div className="ListPage">
      <Header />

      <h1>–°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π</h1>

      <div className="list-block">
        <ListCard />
        <ListCard />
      </div>

      {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      <select onChange={(e) => setSelectedCategory(e.target.value)} value={selectedCategory}>
        {categories.map((cat) => (
          <option key={cat} value={cat}>{cat}</option>
        ))}
      </select>

      {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ */}
      <input
        type="text"
        placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
      />

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ */}
      <ul>
        {filteredItems.length > 0 ? (
          filteredItems.map((item) => (
            <li key={item.id}>
              <img src={item.image || "https://via.placeholder.com/100"} alt={item.name} width={100} />
              <h3>{item.name}</h3>
              <p>{item.location} - {item.type}</p>
              <Link to={`/item/${item.id}`}>–û—Ç–∫—Ä—ã—Ç—å</Link>
            </li>
          ))
        ) : (
          <p>–û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        )}
      </ul>
    </div>
  );
};

export default ListPage;
